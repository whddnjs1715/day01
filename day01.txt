원격 저장소를 내 컴퓨터에 받아오기(clone)
  1. github에 url을 복사 후 아래 명령어를 입력한다.
    git clone https://github.com/whddnjs1715/gitTest.git (gitTest 폴더 생성 안에 복제)

  폴더 및 파일 삭제 : rm -rf gitTest

    git clone https://github.com/whddnjs1715/gitTest.git . (파일만 생성)

    git add .
    git commit -m "수정 후 두번째 파일 업로드"

  * 404 에러
	제어판 -> 자격증명 관리자 -> 윈도우 자격증명 

  git push -u origin master

  git log

  소스 트리 다운로드
  https://www.sourcetreeapp.com

  * GIT으로 추적하는 파일의 4가지 상태
      (추적안됨, 수정없음, 수정됨, 스테이지됨)

	다른사람과의 작업
		github -> setting -> Manage access ->  collaborator를 초대

EJB(Enterprise JavaBeans)
	- 동시 접속자수가 10,000명 이상 사이트 구축시 고려하는 컴퍼넌트 기술이다.
	- 안정적인 트랜젝션이 필요한 사이트 구축시 사용한다.
	- 접속자수가 많은 공공기관, 기상청 병무청, 금융 기업등에서 사용한다.
	- 속도는 느리지만 개발시에 개발자에게 많은 자동화된 기능을 제공해 분산 시스템 구축을 쉽게 해준다.
	- 기초기술(JSP, BEANS, Servlet, Transaction, Connection Pooling)을 알아야 EJB를 사용할 수 있다.
	- Weblogic, zeus등을 주로 사용한다.
	
	단점
	- 복잡한 프로그래밍 모델을 사용한다.
	- 필요없이 중복 또는 종속적인 코드가 많이 발생한다.
	- 객체지향이지 않다.
	- 개발 생산성이 떨어진다.
	
Spring
	- 크기와 부하 측면에서 경량급 컴퍼넌트이다.
	- 확장이 높다.
	- 의존성 주입(DI)을 지원한다.
	- 애플리케이션 객체의 생명 주기와 설정을 포함하고 관리한다는 점에서 일종의 컨테이너라고 부르기도 한다.
	- 간단한 컴포넌트로 복잡한 애플리케이션을 구성하고 설정할 수 있다.
	
	단점
		- 따로 배워야합니다.
		- 초기세팅이 어려습니다.

Spring BOOT
	스프링 프레임워크를 사용하는 프로젝트를 간편하게 설정할 수 있는 스프링 프레임워크 서브 프로젝트라고 할 수 있다.

	특징
		- 단독 실행 가능한 스프링 애플리케이션을 생성합니다.
		- 최소한의 초기 스프링 구성으로 가능한 빨리 시작하고 실행할 수 있도록 설계되었습니다.
		- 웹 컨테이너를 내장하고 있어 최소한 설정으로 쉽게 웹 어플리케이션을 만들 수 있습니다.

주소 관련 Annotation

@RestController : 적용된 CLASS가 REST API로 동작하도록 설정한다.
@RequestMapping : 외부에 주소를 노출하는 설정

	* @RequestMapping, @Controller, HTTP GET, POST, PUT, DELETE등 적용 가능 Method를 정하지 않으면 전부 동작한다.
    * @GetMapping : RequestMapping method를 분리한 하위 개념으로 Get Method에만 동작한다.
    * @PostMapping : RequestMapping method를 분리한 하위 개념으로 Post Method에만 동작한다.
    * @PutMapping : RequestMapping method를 분리한 하위 개념으로 Put Method에만 동작한다.
    * @DeleteMapping : RequestMapping method를 분리한 하위 개념으로 Delete Method에만 동작한다.

    * 스프링 부트는 객체를 리턴하면 자동으로 JSON라이브러리가 JSON형식으로 출력한다.

Lombok
       생성자와 get, set 메소드를 모두 간단하게 생성해주는 기능을 사용한다.
         compileOnly 'org.projectlombok:lombok:1.18.16'
         annotationProcessor 'org.projectlombok:lombok:1.18.16'

         testCompileOnly 'org.projectlombok:lombok:1.18.16'
         testAnnotationProcessor 'org.projectlombok:lombok:1.18.16'
            (build graddel에 작성)

JPA(Java Persistent API)
     ORM(Object Relatianal Mapping)으로 RDB데이터베이스의 정보를 객체지향으로 손쉽게 활용할 수 있도록 도와주는 도구이다.
     자바객체와 관계형 데이터베이스 둘간의 맵핑을 통해서 보다 손쉽게 적용할 수 있는 기술을 제공한다.
     또한 쿼리에 집중하기 보다는 객체에 집중함으로써, 조금 더 프로그램적으로 많이 활용할 수 있다.










https://ndb796.tistory.com/40?category=986634
https://javaengine.tistory.com/entry/macOS-%EC%98%A4%EB%9D%BC%ED%81%B4-DB-%EC%84%A4%EC%B9%98-%EB%B0%8F-%EC%8B%A4%ED%96%89-%EB%B0%A9%EB%B2%95?category=717487
https://devtagebuch.tistory.com/12ㄴ